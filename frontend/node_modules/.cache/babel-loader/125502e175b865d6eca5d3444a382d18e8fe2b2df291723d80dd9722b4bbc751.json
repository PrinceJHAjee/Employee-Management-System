{"ast":null,"code":"// src/api.js\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\nconst handleResponse = async response => {\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || 'Something went wrong');\n  }\n  return response.json();\n};\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem('token');\n  return {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${token}`\n  };\n};\nexport const login = async credentials => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n\n    // Check response status and parse JSON\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'Something went wrong');\n    }\n    console.log(\"response :\", response.json);\n    return response.json();\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\nexport const register = async user => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Registration error:', error);\n    throw error;\n  }\n};\nexport const fetchEmployees = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/employees`, {\n      method: 'GET',\n      headers: getAuthHeaders()\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Fetch employees error:', error);\n    throw error;\n  }\n};\nexport const getEmployee = async id => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/employees/${id}`, {\n      method: 'GET',\n      headers: getAuthHeaders()\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Get employee error:', error);\n    throw error;\n  }\n};\nexport const updateEmployee = async (id, employee) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/employees/${id}`, {\n      method: 'PUT',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(employee)\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Update employee error:', error);\n    throw error;\n  }\n};\nexport const createEmployee = async employee => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/employees`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(employee)\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Create employee error:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_BASE_URL","handleResponse","response","ok","error","json","Error","message","getAuthHeaders","token","localStorage","getItem","Authorization","login","credentials","fetch","method","headers","body","JSON","stringify","console","log","register","user","fetchEmployees","getEmployee","id","updateEmployee","employee","createEmployee"],"sources":["C:/Users/Owner/Desktop/Project/frontend/src/api.js"],"sourcesContent":["// src/api.js\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\r\n\r\nconst handleResponse = async (response) => {\r\n  if (!response.ok) {\r\n    const error = await response.json();\r\n    throw new Error(error.message || 'Something went wrong');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nconst getAuthHeaders = () => {\r\n  const token = localStorage.getItem('token');\r\n  return {\r\n    'Content-Type': 'application/json',\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n};\r\n\r\nexport const login = async (credentials) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n\r\n    // Check response status and parse JSON\r\n    if (!response.ok) {\r\n      const error = await response.json();\r\n      throw new Error(error.error || 'Something went wrong');\r\n    }\r\n    console.log(\"response :\",response.json);\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\nexport const register = async (user) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error('Registration error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchEmployees = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/employees`, {\r\n      method: 'GET',\r\n      headers: getAuthHeaders(),\r\n    });\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error('Fetch employees error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getEmployee = async (id) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/employees/${id}`, {\r\n      method: 'GET',\r\n      headers: getAuthHeaders(),\r\n    });\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error('Get employee error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateEmployee = async (id, employee) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/employees/${id}`, {\r\n      method: 'PUT',\r\n      headers: getAuthHeaders(),\r\n      body: JSON.stringify(employee),\r\n    });\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error('Update employee error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createEmployee = async (employee) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/employees`, {\r\n      method: 'POST',\r\n      headers: getAuthHeaders(),\r\n      body: JSON.stringify(employee),\r\n    });\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error('Create employee error:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}