{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\nconst handleResponse = async response => {\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || 'Something went wrong');\n  }\n  return response.json();\n};\nexport const login = async credentials => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Login error:', error);\n    throw error;\n  }\n};\nexport const fetchEmployees = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/employees`);\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Fetch employees error:', error);\n    throw error;\n  }\n};\nexport const getEmployee = async id => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/employees/${id}`);\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Get employee error:', error);\n    throw error;\n  }\n};\nexport const updateEmployee = async (id, employee) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/employees/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(employee)\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Update employee error:', error);\n    throw error;\n  }\n};\nexport const createEmployee = async employee => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/employees`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(employee)\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Create employee error:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_BASE_URL","handleResponse","response","ok","error","json","Error","message","login","credentials","fetch","method","headers","body","JSON","stringify","console","fetchEmployees","getEmployee","id","updateEmployee","employee","createEmployee"],"sources":["C:/Users/Owner/Desktop/Project/frontend/src/utils/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\r\n\r\nconst handleResponse = async (response) => {\r\n  if (!response.ok) {\r\n    const error = await response.json();\r\n    throw new Error(error.message || 'Something went wrong');\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const login = async (credentials) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchEmployees = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/employees`);\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error('Fetch employees error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getEmployee = async (id) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/employees/${id}`);\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error('Get employee error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateEmployee = async (id, employee) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/employees/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(employee),\r\n    });\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error('Update employee error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const createEmployee = async (employee) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/employees`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(employee),\r\n    });\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    console.error('Create employee error:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}